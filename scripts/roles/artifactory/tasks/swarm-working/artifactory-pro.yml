version: '3'
services:
  postgresql:
    image: docker.bintray.io/postgres:9.6.11
    ports:
     - 5432:5432
    environment:
     - POSTGRES_DB=artifactory
     # The following must match the DB_USER and DB_PASSWORD values passed to Artifactory
     - POSTGRES_USER=artifactory
     - POSTGRES_PASSWORD=password
    volumes:
     - /data/postgresql:/var/lib/postgresql/data
     - /etc/localtime:/etc/localtime:ro
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.role == manager] 
  
  artifactory:
    image: docker.bintray.io/jfrog/artifactory-pro:6.18.1
    ports:
     - 8081:8081
    depends_on:
     - postgresql
       #    links:
       #     - postgresql
    volumes:
     - /data/artifactory:/var/opt/jfrog/artifactory
     - /etc/localtime:/etc/localtime:ro
    environment:
     - DB_TYPE=postgresql
     - ARTIFACTORY_MASTER_KEY=FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF  
     - HA_MEMBERSHIP_PORT=10017
     # The following must match the POSTGRES_USER and POSTGRES_PASSWORD values passed to PostgreSQL
     - DB_USER=artifactory
     - DB_PASSWORD=password
     - MIN_MAX_OPEN_FILES=1000  
     # Add extra Java options by uncommenting the following line
     #- EXTRA_JAVA_OPTIONS=-Xms512m -Xmx4g
     #    restart: always
     #    ulimits:
     #      nproc: 65535
     #      nofile:
     #        soft: 32000
     #        hard: 40000
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.role == manager]    

  nginx:
    image: docker.bintray.io/jfrog/nginx-artifactory-pro:6.18.1
    ports:
     - 80:80
     - 443:443
    depends_on:
     - artifactory
    volumes:
     - /data/nginx:/var/opt/jfrog/nginx
     - /etc/localtime:/etc/localtime:ro
    environment:
     - ART_BASE_URL=http://artifactory:8081/artifactory
     - SSL=true
     - MIN_MAX_OPEN_FILES=1000
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.role == manager]
